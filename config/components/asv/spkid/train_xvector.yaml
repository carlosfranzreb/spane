# ################################
# Model: Speaker identification with ECAPA
# Authors: Hwidong Na & Mirco Ravanelli
# ################################

# Basic parameters
output_folder: !PLACEHOLDER
save_folder: !ref <output_folder>
train_log: !ref <output_folder>/train_log.txt

# Data files
# data_folder: !PLACEHOLDER # e.g. /path/to/Voxceleb

train_annotation: !ref <save_folder>/train.csv
valid_annotation: !ref <save_folder>/dev.csv
val_ratio: 0.1

# Folder to extract data augmentation files
rir_folder: checkpoints/rirs

# AL Task weighting: weight will be linearly increased
n_epochs_zero: !PLACEHOLDER
n_epochs_max: !PLACEHOLDER
max_weight: !PLACEHOLDER

number_of_epochs: 10
batch_size: 128
lr: 0.001
lr_final: 0.0001

sample_rate: 16000
sentence_len: 3.0 # seconds
shuffle: True
num_workers: !PLACEHOLDER
random_chunk: True

# Feature parameters
n_mels: 24
left_frames: 0
right_frames: 0
deltas: False

# Number of speakers and targets
out_n_neurons_src: !PLACEHOLDER
out_n_neurons_tgt: !PLACEHOLDER
emb_dim: 512

dataloader_options:
  batch_size: !ref <batch_size>
  shuffle: !ref <shuffle>
  num_workers: !ref <num_workers>
  drop_last: true

compute_features: !new:speechbrain.lobes.features.Fbank
  n_mels: !ref <n_mels>
  left_frames: !ref <left_frames>
  right_frames: !ref <right_frames>
  deltas: !ref <deltas>

embedding_model: !new:speechbrain.lobes.models.Xvector.Xvector
  in_channels: !ref <n_mels>
  activation: !name:torch.nn.LeakyReLU
  tdnn_blocks: 5
  tdnn_channels: [512, 512, 512, 512, 1500]
  tdnn_kernel_sizes: [5, 3, 3, 1, 1]
  tdnn_dilations: [1, 2, 3, 1, 1]
  lin_neurons: !ref <emb_dim>

classifier_src: !new:speechbrain.lobes.models.Xvector.Classifier
  input_shape: [null, null, !ref <emb_dim>]
  activation: !name:torch.nn.LeakyReLU
  lin_blocks: 1
  lin_neurons: !ref <emb_dim>
  out_neurons: !ref <out_n_neurons_src>

classifier_tgt: !new:speechbrain.lobes.models.Xvector.Classifier
  input_shape: [null, null, !ref <emb_dim>]
  activation: !name:torch.nn.LeakyReLU
  lin_blocks: 1
  lin_neurons: !ref <emb_dim>
  out_neurons: !ref <out_n_neurons_tgt>

epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
  limit: !ref <number_of_epochs>

mean_var_norm: !new:speechbrain.processing.features.InputNormalization
  norm_type: sentence
  std_norm: False

modules:
  compute_features: !ref <compute_features>
  embedding_model: !ref <embedding_model>
  classifier_src: !ref <classifier_src>
  classifier_tgt: !ref <classifier_tgt>
  mean_var_norm: !ref <mean_var_norm>

# Cost + optimization
compute_cost:
  !name:speechbrain.nnet.losses.nll_loss # compute_error: !name:speechbrain.nnet.losses.classification_error


opt_class: !name:torch.optim.Adam
  lr: !ref <lr>
  weight_decay: 0.000002

lr_annealing: !new:speechbrain.nnet.schedulers.LinearScheduler
  initial_value: !ref <lr>
  final_value: !ref <lr_final>
  epoch_count: !ref <number_of_epochs>

error_stats: !name:speechbrain.utils.metric_stats.MetricStats
  metric: !name:speechbrain.nnet.losses.classification_error
    reduction: batch

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
  save_file: !ref <train_log>

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
  checkpoints_dir: !ref <save_folder>
  recoverables:
    embedding_model: !ref <embedding_model>
    classifier_src: !ref <classifier_src>
    classifier_tgt: !ref <classifier_tgt>
    normalizer: !ref <mean_var_norm>
    counter: !ref <epoch_counter>
    lr_annealing: !ref <lr_annealing>
