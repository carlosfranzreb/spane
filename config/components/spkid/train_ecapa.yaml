# ################################
# Model: Speaker identification with ECAPA
# Authors: Hwidong Na & Mirco Ravanelli
# ################################

# Basic parameters
output_folder: !PLACEHOLDER
save_folder: !ref <output_folder>
train_log: !ref <output_folder>/train_log.txt

# Data files
train_annotation: !ref <output_folder>/train.csv
valid_annotation: !ref <output_folder>/val.csv
val_ratio: 0.1

# Folder to extract data augmentation files
rir_folder: checkpoints/rirs

# Training parameters
number_of_epochs: 10
batch_size: 256
lr: 0.001
base_lr: 0.000001
max_lr: !ref <lr>
step_size: 65000
sample_rate: 16000
sentence_len: 3.0 # seconds
shuffle: true
num_workers: !PLACEHOLDER
random_chunk: true

# Feature parameters
n_mels: 80
left_frames: 0
right_frames: 0
deltas: false

# Number of speakers
out_n_neurons: !PLACEHOLDER

dataloader_options:
  batch_size: !ref <batch_size>
  shuffle: !ref <shuffle>
  num_workers: !ref <num_workers>

compute_features: !new:speechbrain.lobes.features.Fbank
  n_mels: !ref <n_mels>
  left_frames: !ref <left_frames>
  right_frames: !ref <right_frames>
  deltas: !ref <deltas>

embedding_model: !new:speechbrain.lobes.models.ECAPA_TDNN.ECAPA_TDNN
  input_size: !ref <n_mels>
  channels: [1024, 1024, 1024, 1024, 3072]
  kernel_sizes: [5, 3, 3, 3, 1]
  dilations: [1, 2, 3, 4, 1]
  groups: [1, 1, 1, 1, 1]
  attention_channels: 128
  lin_neurons: 192

classifier: !new:speechbrain.lobes.models.ECAPA_TDNN.Classifier
  input_size: 192
  out_neurons: !ref <out_n_neurons>

epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
  limit: !ref <number_of_epochs>

# Definition of the augmentation pipeline.
# If concat_augment = False, the augmentation techniques are applied
# in sequence. If concat_augment = True, all the augmented signals
# # are concatenated in a single big batch.

mean_var_norm: !new:speechbrain.processing.features.InputNormalization
  norm_type: sentence
  std_norm: False

modules:
  compute_features: !ref <compute_features>
  embedding_model: !ref <embedding_model>
  classifier: !ref <classifier>
  mean_var_norm: !ref <mean_var_norm>

compute_cost: !new:speechbrain.nnet.losses.LogSoftmaxWrapper
  loss_fn: !new:speechbrain.nnet.losses.AdditiveAngularMargin
    margin: 0.2
    scale: 30

opt_class: !name:torch.optim.Adam
  lr: !ref <lr>
  weight_decay: 0.000002

lr_annealing: !new:speechbrain.nnet.schedulers.CyclicLRScheduler
  base_lr: !ref <base_lr>
  max_lr: !ref <max_lr>
  step_size: !ref <step_size>

error_stats: !name:speechbrain.utils.metric_stats.MetricStats
  metric: !name:speechbrain.nnet.losses.classification_error
    reduction: batch

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
  save_file: !ref <train_log>

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
  checkpoints_dir: !ref <save_folder>
  recoverables:
    embedding_model: !ref <embedding_model>
    classifier: !ref <classifier>
    normalizer: !ref <mean_var_norm>
    counter: !ref <epoch_counter>
    lr_annealing: !ref <lr_annealing>
